# 060-elasticsearch-config.yaml
# Single-node Elasticsearch setup using Bitnami Helm chart (optimized for fast startup)
#
# Purpose:
# This configuration is designed to deploy a single-node Elasticsearch instance
# with optimized resource usage, security disabled, and unnecessary features turned off.
# It is intended for local development, testing, or lightweight workloads.
#
# Installation:
# helm install elasticsearch bitnami/elasticsearch -f 060-elasticsearch-config.yaml --namespace elasticsearch --create-namespace
#
# Uninstall:
# helm uninstall elasticsearch --namespace elasticsearch
#
# Key Benefits of Single-Node Setup:
# - Fast startup (under 2 minutes vs. hours for multi-node)
# - Simple configuration and management
# - Resource efficient (single pod instead of 8+ pods)
# - Perfect for development and testing
#
# Transitioning to Production:
# - Increase heap size (`heapSize`) and adjust CPU/memory limits based on workload.
# - Enable security (`security.enabled: true`) and configure authentication.
# - Configure TLS (`security.tls.restEncryption: true`) for secure communication.
# - Increase persistence size (`persistence.size`) for large datasets.
# - For production multi-node: remove single-node constraints and adjust replica counts.

clusterName: elasticsearch

# Single node setup optimized for fast startup and minimal resource usage
master:
  masterOnly: false
  replicaCount: 1  # Single master node (handles all roles)
  heapSize: 512m  # Adjusted heap size for stability
  resources:
    requests:
      cpu: 250m
      memory: 512Mi
    limits:
      cpu: 1000m
      memory: 1Gi

data:
  replicaCount: 0  # No separate data nodes - master handles data

coordinating:
  replicaCount: 0  # No separate coordinating nodes - master handles coordination

ingest:
  enabled: false  # No separate ingest node - master handles ingestion

# Persistence settings to store data permanently
persistence:
  enabled: true
  size: 8Gi  # Adjust based on expected storage needs

# Disable security for simplicity in local development
security:
  enabled: false
  tls:
    restEncryption: false
    autoGenerated: true

# Use HTTP instead of HTTPS to simplify connections
http:
  protocol: http

# Disable Kibana to reduce resource usage
global:
  kibanaEnabled: false

# Disable metrics collection to save resources
metrics:
  enabled: false

# Reduce default replica count to prevent unassigned shards
elasticsearch:
  node.roles: [master, data_hot]  # Limit node roles to essential ones
  extraConfig: |
    xpack.slm.enabled: false
    xpack.ccr.enabled: false
    xpack.identity_provider.enabled: false
    xpack.downsample.enabled: false
    xpack.profiling.enabled: false
    xpack.otel.enabled: false
    xpack.apm.enabled: false
    xpack.sql.enabled: false
    xpack.kql.enabled: false
    xpack.async.enabled: false
    xpack.deprecation.enabled: false
    thread_pool.ccr.size: 1
    thread_pool.ml_datafeed.size: 1
    thread_pool.ml_utility.size: 1
    thread_pool.search.size: 1
    thread_pool.write.size: 1
    thread_pool.get.size: 1
    xpack.ml.native_memory_lock: false
    network.host: 127.0.0.1
    transport.host: 127.0.0.1
    http.host: 0.0.0.0
    index.number_of_replicas: 0
    xpack.security.enabled: false
    xpack.watcher.enabled: false
    xpack.ml.enabled: false
    xpack.monitoring.enabled: false
    xpack.graph.enabled: false
    xpack.autoscaling.enabled: false
    xpack.enrich.enabled: false
    xpack.eql.enabled: false
    xpack.fleet.enabled: false
    xpack.logstash.enabled: false
    xpack.rollup.enabled: false
    -XX:G1HeapRegionSize=2m
    -XX:InitiatingHeapOccupancyPercent=50
    -XX:G1ReservePercent=10
