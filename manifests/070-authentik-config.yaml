# 070-authentik-config.yaml
#
# Description:
# Helm values for deploying Authentik in the 'authentik' namespace using EXTERNAL PostgreSQL and Redis 
# running in the 'default' namespace. Uses Method 1 (environment variables) for all sensitive data.
#
# Components:
# - Authentik Server: Main identity provider and authentication interface
# - External PostgreSQL: Primary database (postgresql.default.svc.cluster.local)
# - External Redis: Session storage (redis-master.default.svc.cluster.local)
# - Traefik Ingress: HTTP routing for local development access
#
# Prerequisites:
# - PostgreSQL and Redis deployed and running in 'default' namespace
# - Run: ansible-playbook playbooks/utility/u09-authentik-create-postgres.yml
#   (This creates the 'authentik' database and user in PostgreSQL)
# - urbalurba-secrets deployed in 'authentik' namespace with proper credentials
#
# Features:
# - Automatic admin user creation via bootstrap environment variables
# - All sensitive values (secrets, passwords, admin credentials) referenced from 'urbalurba-secrets'
# - Method 1 secret management using Kubernetes secret environment variable injection
# - Minimal worker configuration for streamlined deployment
#
# Usage:
# helm upgrade --install authentik authentik/authentik -f manifests/070-authentik-config.yaml -n authentik --create-namespace
#
# Access:
# - Local Development: http://authentik.localhost (configured in this file)
# - Internet Access: Deploy additional ingress using manifests/071-authentik-ingress.yaml
#   (The localhost ingress is for local development only)
#
# Notes:
# - Bootstrap variables (AUTHENTIK_BOOTSTRAP_*) are only read on first startup for initial admin user creation
# - Worker configuration is omitted for minimal setup; server handles both web and background tasks
# - External services must be running before deploying Authentik
#
# Namespace: authentik

authentik:


  # Hardcoded secret key for now (must be 60+ random chars)
  secret_key: "DuoCca6w0D7bMpfOhDZkQlKJ0fRMc+yEypgLilE754jMX2OoEffb3TzWzHqJ8880viR3UcWe6Zxgh6LL"




  # External PostgreSQL configuration
  postgresql:
    host: "postgresql.default.svc.cluster.local"
    name: "authentik"
    user: "authentik"

  # External Redis configuration
  redis:
    host: "redis-master.default.svc.cluster.local"

  error_reporting:
    enabled: true


server:
  env:
    # External PostgreSQL connection
    - name: AUTHENTIK_POSTGRESQL__PASSWORD
      valueFrom:
        secretKeyRef:
          name: urbalurba-secrets
          key: AUTHENTIK_POSTGRESQL__PASSWORD

    # External Redis connection
    - name: AUTHENTIK_REDIS__PASSWORD
      valueFrom:
        secretKeyRef:
          name: urbalurba-secrets
          key: AUTHENTIK_COPY_OF_REDIS_PASSWORD

    # Bootstrap admin user (only read on first startup)
#    - name: AUTHENTIK_BOOTSTRAP_EMAIL
#      valueFrom:
#        secretKeyRef:
#          name: urbalurba-secrets
#          key: AUTHENTIK_BOOTSTRAP_EMAIL
#    - name: AUTHENTIK_BOOTSTRAP_PASSWORD
#      valueFrom:
#        secretKeyRef:
#          name: urbalurba-secrets
#          key: AUTHENTIK_BOOTSTRAP_PASSWORD

  ingress:
    ingressClassName: traefik
    enabled: true
    hosts:
      - authentik.localhost

# Disable worker for minimal install
worker:
  enabled: false

# Disable bundled services - use existing external services
postgresql:
  enabled: false
redis:
  enabled: false
