# file: /mnt/urbalurbadisk/manifests/090-gravitee-ingress.yaml
# description: Separate ingress configuration for Gravitee APIM components
#
# Purpose: Define routing rules for all Gravitee APIM components through Traefik
# This file creates path-based routing for all Gravitee components under /apim/* path
# It should be applied after Gravitee services are deployed
#
# IMPORTANT PATH CONFIGURATION:
# - All Gravitee components are configured to run under the '/apim' path prefix
# - These paths MUST match the BASE_HREF and other path settings in 090-gravitee-config.yaml
# - Path mapping:
#   - /apim/management → Management API
#   - /apim/portal → Portal API
#   - /apim/gateway → Gateway API
#   - /apim/console(/.*) → Management UI (with path rewriting)
#   - /apim/portal-ui → Portal UI
#
# HOSTNAME CONFIGURATION:
# - No hostnames are hardcoded, allowing flexibility with Tailscale funnel
# - This configuration will work with any hostname that resolves to your Traefik ingress
# - Routing is based entirely on paths, not hostnames
#
# Traffic flow:
# Tailscale funnel → Traefik → Gravitee services based on path
#
# Usage:
# This file should be applied after Gravitee services are deployed,
# using the Ansible playbook (090-setup-gravitee.yml) or direct kubectl command:
# kubectl apply -f 090-gravitee-ingress.yaml

---
# Management API Ingress (handles management API endpoints)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gravitee-apim-api-management
  annotations:
    traefik.ingress.kubernetes.io/priority: "1000"
    traefik.ingress.kubernetes.io/router.entrypoints: "web,websecure"
spec:
  ingressClassName: traefik
  rules:
  - http:
      paths:
      - path: /apim/management
        pathType: Prefix
        backend:
          service:
            name: gravitee-apim-api
            port:
              number: 8083
---
# Portal API Ingress (handles portal API endpoints)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gravitee-apim-api-portal
  annotations:
    traefik.ingress.kubernetes.io/priority: "1000"
    traefik.ingress.kubernetes.io/router.entrypoints: "web,websecure"
spec:
  ingressClassName: traefik
  rules:
  - http:
      paths:
      - path: /apim/portal
        pathType: Prefix
        backend:
          service:
            name: gravitee-apim-api
            port:
              number: 8083
---
# Gateway Ingress (handles API traffic)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gravitee-apim-gateway
  annotations:
    traefik.ingress.kubernetes.io/priority: "1000"
    traefik.ingress.kubernetes.io/router.entrypoints: "web,websecure"
spec:
  ingressClassName: traefik
  rules:
  - http:
      paths:
      - path: /apim/gateway
        pathType: Prefix
        backend:
          service:
            name: gravitee-apim-gateway
            port:
              number: 8082
---
# Portal UI Ingress (handles developer portal frontend)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gravitee-apim-portal
  annotations:
    traefik.ingress.kubernetes.io/priority: "1000"
    traefik.ingress.kubernetes.io/router.entrypoints: "web,websecure"
spec:
  ingressClassName: traefik
  rules:
  - http:
      paths:
      - path: /apim/portal-ui
        pathType: Prefix
        backend:
          service:
            name: gravitee-apim-portal
            port:
              number: 8085
---
# Management UI Ingress (handles admin console frontend)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gravitee-apim-ui
  annotations:
    traefik.ingress.kubernetes.io/priority: "1000"
    traefik.ingress.kubernetes.io/router.entrypoints: "web,websecure"
    # Path rewriting required for console UI
    traefik.ingress.kubernetes.io/rewrite-target: "/$1"
spec:
  ingressClassName: traefik
  rules:
  - http:
      paths:
      - path: /apim/console(/.*)?
        pathType: Prefix
        backend:
          service:
            name: gravitee-apim-ui
            port:
              number: 8084