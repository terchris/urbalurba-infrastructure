# File: manifests/208-openwebui-config.yaml
#
# Description:
# Helm values file for deploying Open WebUI with the official Helm chart.
# - Uses external PostgreSQL (with pgvector) via pre-constructed DATABASE_URL from secrets.
# - Connects to both in-cluster and host Ollama instances.
# - Uses an external Tika deployment for document extraction.
# - Pipelines enabled for document processing.
# - Persistent storage via existing PVC.
# - Custom resource requests/limits for stability and performance.
# - Ingress is disabled here (handled separately in a separate manifest).
# - OAuth2/OIDC authentication via Authentik with automatic group synchronization (centralized in urbalurba-secrets).
# - Automatic user group management: Users are assigned to OpenWebUI groups based on their Authentik group membership.
# - Just-in-Time (JIT) group creation: Groups from Authentik are automatically created in OpenWebUI if they don't exist.
# - Role-based access control: Users can be assigned roles (admin/user) based on their Authentik group membership.
#
# Usage:
#   helm upgrade --install open-webui open-webui/open-webui -n ai -f manifests/208-openwebui-config.yaml
#
# Prerequisites:
# - The 'urbalurba-secrets' secret must exist in the 'ai' namespace with required keys:
#   * DATABASE_URL: PostgreSQL connection string with pgvector support
#   * OPENWEBUI_OAUTH_CLIENT_ID: Authentik OAuth client ID
#   * OPENWEBUI_OAUTH_CLIENT_SECRET: Authentik OAuth client secret
#   * OPENWEBUI_OAUTH_PROVIDER_NAME: OAuth provider name (set to "Authentik")
#   * OPENWEBUI_OPENID_PROVIDER_URL: Authentik OIDC discovery endpoint
#   * OPENWEBUI_OPENID_REDIRECT_URI: OAuth callback URL
#   * OPENWEBUI_ENABLE_OAUTH_SIGNUP: Enable new user registration via OAuth
#   * OPENWEBUI_OAUTH_SCOPES: OAuth scopes to request (should include "openid email profile groups")
# - PersistentVolumeClaim 'openwebui-data' must exist in the 'ai' namespace.
# - Tika and Ollama should be deployed separately if not using the chart's built-in options.
# - Authentik OAuth application must be configured with matching redirect URI.
# - For group management: Authentik must be configured to send group information in OAuth tokens.
#   This requires additional property mappings (see 074-authentik-openwebui-group-mappings.yaml).


# note that the default image contains ollama and is 5.07GB
# there is a slim variant that is 3.95GB and does not contain ollama
# but the slim variant is missing files so that it fails during deployment


nameOverride: ""
namespaceOverride: "ai"

# Override Helm chart defaults to ensure our configuration takes precedence
fullnameOverride: "open-webui"

# External services configuration
# Using external Ollama instances instead of helm-managed deployment
ollama:
  enabled: false  # Using external Ollama instances

# Multiple Ollama endpoints for load balancing and redundancy
# Add/remove URLs based on your available Ollama instances
ollamaUrls:
  - "http://ollama:11434"                  # In-cluster Ollama
  - "http://host.lima.internal:11434"      # Host Ollama (adjust for your environment)

# Pipelines - Extends OpenWebUI functionality with custom processing chains
# Currently enabled for enhanced document processing and model integrations
pipelines:
  enabled: true

# Apache Tika - Document extraction and processing server
# Currently using external deployment for better resource control
tika:
  enabled: false  # Using external Tika deployment

# WebSocket Configuration - IMPORTANT FOR PRODUCTION SCALING
# Currently disabled for single-instance deployment
websocket:
  enabled: false    # Single-pod deployment, no Redis needed
  redis:
    enabled: false  # Don't deploy chart's Redis, use existing cluster Redis



# Database configuration - External PostgreSQL with pgvector for production
# Using secrets-based connection for security and flexibility
databaseUrl: ""

# Storage configuration - Persistent data storage for user files and models
# Using existing PVC for better resource control and data persistence
persistence:
  enabled: true
  existingClaim: "openwebui-data"
  accessModes:
    - ReadWriteOnce
  size: 20Gi

# Resource management - CPU and memory limits for stable operation
# Adjust based on your cluster capacity and expected user load
# Settings here are for minimal deployment.
resources:
  requests:
    memory: 1.5Gi
    cpu: 500m
  limits:
    memory: 3Gi
    cpu: 1500m

# Environment variables - Core OpenWebUI configuration via extraEnvVars
# Using secrets for sensitive values and direct values for non-sensitive config
extraEnvVars:
  # Database connection - use pre-constructed DATABASE_URL from secret
  - name: DATABASE_URL
    valueFrom:
      secretKeyRef:
        name: urbalurba-secrets
        key: DATABASE_URL

  # Model that is selected for the user the first time they log in - the model is running in separate pod 
  - name: DEFAULT_MODELS
    value: "qwen3:0.6b"

  # Authentication and User Management
  - name: DEFAULT_USER_ROLE
    value: "user"    # Default: "pending" - auto-activate new users. If pending the admin needs to approve the user.
    
  # Essential User Permissions - CRITICAL non-defaults for OAuth users
  - name: USER_PERMISSIONS_WORKSPACE_MODELS_ACCESS
    value: "true"    # Default: False - CRITICAL: OAuth users need this to see models!
  - name: USER_PERMISSIONS_WORKSPACE_KNOWLEDGE_ACCESS
    value: "true"    # Default: False - Allow access to knowledge bases
  - name: USER_PERMISSIONS_WORKSPACE_PROMPTS_ACCESS
    value: "true"    # Default: False - Allow access to saved prompts
    
  # Security-conscious settings (non-defaults)
  - name: USER_PERMISSIONS_CHAT_CALL
    value: "false"   # Default: True - Disable calls (requires HTTPS)
  - name: USER_PERMISSIONS_FEATURES_CODE_INTERPRETER
    value: "false"   # Default: True - Disable code interpreter for security


  # Document processing with Tika
  - name: CONTENT_EXTRACTION_ENGINE
    value: "tika"
  - name: TIKA_SERVER_URL
    value: "http://tika:9998"

  # Vector database configuration (PostgreSQL with pgvector)
  - name: VECTOR_DB
    value: "pgvector"
  - name: PGVECTOR_COLLECTION_NAME
    value: "openwebui_documents" # not sure if this one is needed.

  # Embedding configuration
  - name: RAG_EMBEDDING_MODEL
    value: "all-MiniLM-L6-v2" # the default embedding model. Changing to a smarter one can give better RAG results.

  # Feature enablement (non-defaults)
  - name: ENABLE_RAG_LOCAL_WEB_FETCH
    value: "true"    # Default: False - Enable local web fetching for RAG
  - name: ENABLE_WEB_SEARCH
    value: "true"    # Default: False - Enable web search functionality
  - name: ENABLE_IMAGE_GENERATION
    value: "true"    # Default: False - Enable image generation
  - name: ENABLE_COMMUNITY_SHARING
    value: "false"   # Default: True - Disable community sharing for privacy

  # OAuth2/OIDC Configuration - Following official OpenWebUI documentation
  # This ensures proper OAuth provider recognition and browser compatibility
  
    
  # OAuth provider configuration - reading from main secrets
  - name: OAUTH_PROVIDER_NAME
    valueFrom:
      secretKeyRef:
        name: urbalurba-secrets
        key: OPENWEBUI_OAUTH_PROVIDER_NAME
    
  # OAuth client credentials - reading from main urbalurba-secrets
  - name: OAUTH_CLIENT_ID
    valueFrom:
      secretKeyRef:
        name: urbalurba-secrets
        key: OPENWEBUI_OAUTH_CLIENT_ID
    
  - name: OAUTH_CLIENT_SECRET
    valueFrom:
      secretKeyRef:
        name: urbalurba-secrets
        key: OPENWEBUI_OAUTH_CLIENT_SECRET
    
  # OAuth scopes and settings - reading from main secrets
  - name: OAUTH_SCOPES
    valueFrom:
      secretKeyRef:
        name: urbalurba-secrets
        key: OPENWEBUI_OAUTH_SCOPES

  # OAuth Group Management - CRITICAL FOR ACCESS CONTROL
  # Enables automatic group synchronization from Authentik to OpenWebUI
  - name: ENABLE_OAUTH_GROUP_MANAGEMENT
    value: "true"    # Sync user groups from Authentik claims on each login
    
  - name: ENABLE_OAUTH_GROUP_CREATION
    value: "true"    # Auto-create OpenWebUI groups from Authentik groups (JIT)
    
  - name: OAUTH_GROUP_CLAIM
    value: "groups"  # The claim in Authentik tokens containing group memberships
    
  # Optional: Role-based access control
  - name: ENABLE_OAUTH_ROLE_MANAGEMENT
    value: "true"    # Enable role assignment from OAuth claims
    
  - name: OAUTH_ROLES_CLAIM
    value: "roles"   # The claim containing role information
    
  # OIDC provider URL - reading from main secrets (enables auto-discovery)
  - name: OPENID_PROVIDER_URL
    valueFrom:
      secretKeyRef:
        name: urbalurba-secrets
        key: OPENWEBUI_OPENID_PROVIDER_URL
    
  # Redirect URI for OAuth callback - reading from main secrets
  - name: OPENID_REDIRECT_URI
    valueFrom:
      secretKeyRef:
        name: urbalurba-secrets
        key: OPENWEBUI_OPENID_REDIRECT_URI
    
  # Enable OAuth features - reading from main secrets
  - name: ENABLE_OAUTH_SIGNUP
    valueFrom:
      secretKeyRef:
        name: urbalurba-secrets
        key: OPENWEBUI_ENABLE_OAUTH_SIGNUP
    
  # Merge OAuth accounts by email - reading from main secrets
  - name: OAUTH_MERGE_ACCOUNTS_BY_EMAIL
    valueFrom:
      secretKeyRef:
        name: urbalurba-secrets
        key: OPENWEBUI_OAUTH_MERGE_ACCOUNTS_BY_EMAIL

  # ============================================================================
  # Variables with default values (commented out to reduce configuration noise)
  # Uncomment and modify only if you need to change from the documented defaults
  # ============================================================================
  
  # Authentication (defaults)
  #- name: WEBUI_AUTH
  #  value: "true"                    # Default: True - Enable authentication
  
  # Admin permissions (defaults)
  #- name: ENABLE_ADMIN_EXPORT
  #  value: "true"                    # Default: True - Allow admin data export
  
  # Chat Controls (defaults - all True)
  #- name: USER_PERMISSIONS_CHAT_CONTROLS
  #  value: "true"                    # Default: True - Show chat controls button
  #- name: USER_PERMISSIONS_CHAT_VALVES
  #  value: "true"                    # Default: True - Show valves in controls
  #- name: USER_PERMISSIONS_CHAT_SYSTEM_PROMPT
  #  value: "true"                    # Default: True - Allow system prompt editing
  #- name: USER_PERMISSIONS_CHAT_PARAMS
  #  value: "true"                    # Default: True - Show advanced parameters
  
  # Basic Chat Permissions (defaults - all True)
  #- name: USER_PERMISSIONS_CHAT_FILE_UPLOAD
  #  value: "true"                    # Default: True - Allow file uploads in chat
  #- name: USER_PERMISSIONS_CHAT_DELETE
  #  value: "true"                    # Default: True - Allow chat deletion
  #- name: USER_PERMISSIONS_CHAT_EDIT
  #  value: "true"                    # Default: True - Allow message editing
  #- name: USER_PERMISSIONS_CHAT_DELETE_MESSAGE
  #  value: "true"                    # Default: True - Allow individual message deletion
  #- name: USER_PERMISSIONS_CHAT_CONTINUE_RESPONSE
  #  value: "true"                    # Default: True - Allow response continuation
  #- name: USER_PERMISSIONS_CHAT_REGENERATE_RESPONSE
  #  value: "true"                    # Default: True - Allow response regeneration
  #- name: USER_PERMISSIONS_CHAT_RATE_RESPONSE
  #  value: "true"                    # Default: True - Allow response rating
  #- name: USER_PERMISSIONS_CHAT_STT
  #  value: "true"                    # Default: True - Allow speech-to-text
  #- name: USER_PERMISSIONS_CHAT_TTS
  #  value: "true"                    # Default: True - Allow text-to-speech
  #- name: USER_PERMISSIONS_CHAT_MULTIPLE_MODELS
  #  value: "true"                    # Default: True - Allow multiple models in chat
  #- name: USER_PERMISSIONS_CHAT_TEMPORARY
  #  value: "true"                    # Default: True - Allow temporary chats
  #- name: USER_PERMISSIONS_CHAT_TEMPORARY_ENFORCED
  #  value: "false"                   # Default: False - Don't force temporary chats
  
  # Workspace Permissions (defaults - all False except tools)
  #- name: USER_PERMISSIONS_WORKSPACE_TOOLS_ACCESS
  #  value: "false"                   # Default: False - No tools access
  
  # Sharing Permissions (defaults - all False)
  #- name: USER_PERMISSIONS_WORKSPACE_MODELS_ALLOW_PUBLIC_SHARING
  #  value: "false"                   # Default: False - No public model sharing
  #- name: USER_PERMISSIONS_WORKSPACE_KNOWLEDGE_ALLOW_PUBLIC_SHARING
  #  value: "false"                   # Default: False - No public knowledge sharing
  #- name: USER_PERMISSIONS_WORKSPACE_PROMPTS_ALLOW_PUBLIC_SHARING
  #  value: "false"                   # Default: False - No public prompt sharing
  #- name: USER_PERMISSIONS_WORKSPACE_TOOLS_ALLOW_PUBLIC_SHARING
  #  value: "false"                   # Default: False - No public tools sharing
  
  # Feature Permissions (mixed defaults)
  #- name: USER_PERMISSIONS_FEATURES_DIRECT_TOOL_SERVERS
  #  value: "false"                   # Default: False - No direct tool server access
  #- name: USER_PERMISSIONS_FEATURES_WEB_SEARCH
  #  value: "true"                    # Default: True - Allow web search
  #- name: USER_PERMISSIONS_FEATURES_IMAGE_GENERATION
  #  value: "true"                    # Default: True - Allow image generation


# Application logging configuration - Component-level logging for debugging
# Set to "debug" for troubleshooting or "error" for production quiet mode
logging:
  level: "info"
  components:
    rag: "info"
    db: "info"
    models: "info"
    ollama: "info"

# Networking - Ingress configuration for external access
# Currently disabled and managed separately for better SSL/TLS control
ingress:
  enabled: false

