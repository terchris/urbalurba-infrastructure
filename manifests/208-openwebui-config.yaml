# File: manifests/208-openwebui-config.yaml
#
# Description:
# Helm values file for deploying Open WebUI with the official Helm chart.
# - Uses external PostgreSQL (with pgvector) via pre-constructed DATABASE_URL from secrets.
# - Connects to both in-cluster and host Ollama instances.
# - Uses an external Tika deployment for document extraction.
# - Pipelines enabled for document processing.
# - Persistent storage via existing PVC.
# - Custom resource requests/limits for stability and performance.
# - Ingress is disabled here (handled separately in a separate manifest).
# - OAuth2/OIDC authentication via Authentik for dual authentication support (centralized in urbalurba-secrets).
#
# Usage:
#   helm upgrade --install open-webui open-webui/open-webui -n ai -f manifests/208-openwebui-config.yaml
#
# Prerequisites:
# - The 'urbalurba-secrets' secret must exist in the 'ai' namespace with required keys:
#   * DATABASE_URL: PostgreSQL connection string with pgvector support
#   * OPENWEBUI_OAUTH_CLIENT_ID: Authentik OAuth client ID
#   * OPENWEBUI_OAUTH_CLIENT_SECRET: Authentik OAuth client secret
#   * OPENWEBUI_OAUTH_PROVIDER_NAME: OAuth provider name (set to "Authentik")
#   * OPENWEBUI_OPENID_PROVIDER_URL: Authentik OIDC discovery endpoint
#   * OPENWEBUI_OPENID_REDIRECT_URI: OAuth callback URL
#   * OPENWEBUI_ENABLE_OAUTH_SIGNUP: Enable new user registration via OAuth
#   * OPENWEBUI_OAUTH_SCOPES: OAuth scopes to request
# - PersistentVolumeClaim 'openwebui-data' must exist in the 'ai' namespace.
# - Tika and Ollama should be deployed separately if not using the chart's built-in options.
# - Authentik OAuth application must be configured with matching redirect URI.


# note that the default image contains ollama and is 5.07GB
# there is a slim variant that is 3.95GB and does not contain ollama
# but the slim variant is missing files so that it fails during deployment


nameOverride: ""
namespaceOverride: "ai"

# Override Helm chart defaults to ensure our configuration takes precedence
fullnameOverride: "open-webui"

# External services configuration
ollama:
  enabled: false  # Using external Ollama instances

ollamaUrls:
  - "http://ollama:11434"                  # In-cluster Ollama
  - "http://host.lima.internal:11434"      # Host Ollama (adjust for your environment)

pipelines:
  enabled: true

tika:
  enabled: false  # Using external Tika deployment

websocket:
  enabled: false

redis-cluster:
  enabled: false

# Database configuration - using pre-constructed DATABASE_URL from secret
databaseUrl: ""

postgresql:
  enabled: false  # Using external PostgreSQL

# Storage configuration
persistence:
  enabled: true
  existingClaim: "openwebui-data"
  accessModes:
    - ReadWriteOnce
  size: 20Gi

# Resource management
resources:
  requests:
    memory: 1.5Gi
    cpu: 500m
  limits:
    memory: 3Gi
    cpu: 1500m

# Environment variables
extraEnvVars:
  # Database connection - use pre-constructed DATABASE_URL from secret
  - name: DATABASE_URL
    valueFrom:
      secretKeyRef:
        name: urbalurba-secrets
        key: DATABASE_URL

  # Model configuration
  - name: DEFAULT_MODELS
    value: "qwen3:0.6b"

  # Authentication and User Management
  - name: WEBUI_AUTH
    value: "true"
  - name: DEFAULT_USER_ROLE
    value: "user"
    
  # Default User Permissions - automatically applied to all users with 'user' role
  # Workspace Permissions
  - name: USER_PERMISSIONS_WORKSPACE_MODELS_ACCESS
    value: "true"    # ‚Üê This fixes OAuth users not seeing models!
  - name: USER_PERMISSIONS_WORKSPACE_KNOWLEDGE_ACCESS
    value: "true"
  - name: USER_PERMISSIONS_WORKSPACE_PROMPTS_ACCESS
    value: "true"
  - name: USER_PERMISSIONS_WORKSPACE_TOOLS_ACCESS
    value: "false"   # Security: Don't allow arbitrary code upload
    
  # Sharing Permissions (keep restrictive for now)
  - name: USER_PERMISSIONS_SHARING_MODELS_PUBLIC
    value: "false"
  - name: USER_PERMISSIONS_SHARING_KNOWLEDGE_PUBLIC
    value: "false"
  - name: USER_PERMISSIONS_SHARING_PROMPTS_PUBLIC
    value: "false"
  - name: USER_PERMISSIONS_SHARING_TOOLS_PUBLIC
    value: "false"
    
  # Chat Permissions (good user experience)
  - name: USER_PERMISSIONS_CHAT_FILE_UPLOAD
    value: "true"
  - name: USER_PERMISSIONS_CHAT_CONTROLS
    value: "true"
  - name: USER_PERMISSIONS_CHAT_VALVES
    value: "true"
  - name: USER_PERMISSIONS_CHAT_SYSTEM_PROMPT
    value: "true"
  - name: USER_PERMISSIONS_CHAT_PARAMS
    value: "true"
  - name: USER_PERMISSIONS_CHAT_EDIT
    value: "true"
  - name: USER_PERMISSIONS_CHAT_DELETE
    value: "true"
  - name: USER_PERMISSIONS_CHAT_DELETE_MESSAGES
    value: "true"
  - name: USER_PERMISSIONS_CHAT_CONTINUE_RESPONSE
    value: "true"
  - name: USER_PERMISSIONS_CHAT_REGENERATE_RESPONSE
    value: "true"
  - name: USER_PERMISSIONS_CHAT_RATE_RESPONSE
    value: "true"
  - name: USER_PERMISSIONS_CHAT_SHARE
    value: "false"   # Keep private for now
  - name: USER_PERMISSIONS_CHAT_EXPORT
    value: "false"   # Keep private for now
  - name: USER_PERMISSIONS_CHAT_STT
    value: "true"
  - name: USER_PERMISSIONS_CHAT_TTS
    value: "true"
  - name: USER_PERMISSIONS_CHAT_CALL
    value: "false"   # Requires HTTPS setup
  - name: USER_PERMISSIONS_CHAT_MULTIPLE_MODELS
    value: "true"
  - name: USER_PERMISSIONS_CHAT_TEMPORARY
    value: "true"
  - name: USER_PERMISSIONS_CHAT_ENFORCE_TEMPORARY
    value: "false"
    
  # Features Permissions
  - name: USER_PERMISSIONS_FEATURES_DIRECT_TOOL_SERVERS
    value: "false"   # Advanced feature
  - name: USER_PERMISSIONS_FEATURES_WEB_SEARCH
    value: "true"    # Enable web search for users
  - name: USER_PERMISSIONS_FEATURES_IMAGE_GENERATION
    value: "true"    # Enable image generation
  - name: USER_PERMISSIONS_FEATURES_CODE_INTERPRETER
    value: "false"   # Optional advanced feature
  - name: USER_PERMISSIONS_FEATURES_NOTES
    value: "true"

  # Document processing with Tika
  - name: CONTENT_EXTRACTION_ENGINE
    value: "tika"
  - name: TIKA_SERVER_URL
    value: "http://tika:9998"

  # Vector database configuration (PostgreSQL with pgvector)
  - name: VECTOR_DB
    value: "pgvector"
  - name: PGVECTOR_COLLECTION_NAME
    value: "openwebui_documents"

  # Embedding configuration
  - name: RAG_EMBEDDING_MODEL
    value: "all-MiniLM-L6-v2"

  # Additional features (verified Open WebUI environment variables)
  - name: ENABLE_RAG_LOCAL_WEB_FETCH
    value: "true"
  - name: ENABLE_WEB_SEARCH
    value: "true"    # Enable web search functionality
  - name: ENABLE_IMAGE_GENERATION
    value: "true"
  - name: ENABLE_COMMUNITY_SHARING
    value: "false"
  - name: ENABLE_ADMIN_EXPORT
    value: "true"

  # OAuth2/OIDC Configuration - Following official OpenWebUI documentation
  # This ensures proper OAuth provider recognition and browser compatibility
  
    
  # OAuth provider configuration - reading from main secrets
  - name: OAUTH_PROVIDER_NAME
    valueFrom:
      secretKeyRef:
        name: urbalurba-secrets
        key: OPENWEBUI_OAUTH_PROVIDER_NAME
    
  # OAuth client credentials - reading from main urbalurba-secrets
  - name: OAUTH_CLIENT_ID
    valueFrom:
      secretKeyRef:
        name: urbalurba-secrets
        key: OPENWEBUI_OAUTH_CLIENT_ID
    
  - name: OAUTH_CLIENT_SECRET
    valueFrom:
      secretKeyRef:
        name: urbalurba-secrets
        key: OPENWEBUI_OAUTH_CLIENT_SECRET
    
  # OAuth scopes and settings - reading from main secrets
  - name: OAUTH_SCOPES
    valueFrom:
      secretKeyRef:
        name: urbalurba-secrets
        key: OPENWEBUI_OAUTH_SCOPES
    
  # OIDC provider URL - reading from main secrets (enables auto-discovery)
  - name: OPENID_PROVIDER_URL
    valueFrom:
      secretKeyRef:
        name: urbalurba-secrets
        key: OPENWEBUI_OPENID_PROVIDER_URL
    
  # Redirect URI for OAuth callback - reading from main secrets
  - name: OPENID_REDIRECT_URI
    valueFrom:
      secretKeyRef:
        name: urbalurba-secrets
        key: OPENWEBUI_OPENID_REDIRECT_URI
    
  # Enable OAuth features - reading from main secrets
  - name: ENABLE_OAUTH_SIGNUP
    valueFrom:
      secretKeyRef:
        name: urbalurba-secrets
        key: OPENWEBUI_ENABLE_OAUTH_SIGNUP
    
  # Merge OAuth accounts by email - reading from main secrets
  - name: OAUTH_MERGE_ACCOUNTS_BY_EMAIL
    valueFrom:
      secretKeyRef:
        name: urbalurba-secrets
        key: OPENWEBUI_OAUTH_MERGE_ACCOUNTS_BY_EMAIL

# Application logging configuration
logging:
  level: "info"
  components:
    rag: "info"
    db: "info"
    models: "info"
    ollama: "info"

# Networking (Ingress disabled - managed separately)
ingress:
  enabled: false


# these variables are not valid and are moved here before I delete them
#  # Enable OAuth authentication
#  - name: OAUTH_ENABLED
#    value: "true"
