# 070-authentik-complete-hardcoded.yaml
#
# Description:
# Helm values file for deploying Authentik with forward authentication support.
# - Uses external PostgreSQL database (configured via secrets)
# - Uses external Redis for session storage
# - Configured for forward auth integration with Traefik
# - Includes embedded outpost for forward authentication
# - Production-ready resource limits and health checks
# - Ingress handled separately for better control
#
# Usage:
#   helm upgrade --install authentik authentik/authentik -n authentik -f manifests/070-authentik-complete-hardcoded.yaml
#
# Prerequisites:
# - The 'urbalurba-secrets' secret must exist in the 'authentik' namespace with required keys
# - PostgreSQL running in 'default' namespace with 'authentik' database created
# - Redis running in 'default' namespace

nameOverride: ""
namespaceOverride: "authentik"

# External PostgreSQL configuration  
postgresql:
  enabled: false  # Using external PostgreSQL

# External Redis configuration
redis:
  enabled: false  # Using external Redis

# Authentik configuration
authentik:
  secret_key: ""  # Will be set via environment variable from secret
  postgresql:
    host: "postgresql.default.svc.cluster.local"
    port: 5432
    name: "authentik"
    user: "authentik"
    password: ""  # Will be set via environment variable from secret
  redis:
    host: "redis-master.default.svc.cluster.local"
    port: 6379
    password: ""  # Will be set via environment variable from secret
  error_reporting:
    enabled: false
  
# Server configuration
server:
  name: "server"
  replicas: 1
  
  # Resource management
  resources:
    requests:
      memory: 512Mi
      cpu: 250m
    limits:
      memory: 1Gi
      cpu: 500m
  
  # Environment variables for configuration
  env:
    - name: AUTHENTIK_SECRET_KEY
      valueFrom:
        secretKeyRef:
          name: urbalurba-secrets
          key: AUTHENTIK_SECRET_KEY
    - name: AUTHENTIK_POSTGRESQL__PASSWORD
      valueFrom:
        secretKeyRef:
          name: urbalurba-secrets
          key: AUTHENTIK_POSTGRESQL__PASSWORD
    - name: AUTHENTIK_POSTGRESQL__HOST
      value: "postgresql.default.svc.cluster.local"
    - name: AUTHENTIK_POSTGRESQL__PORT
      value: "5432"
    - name: AUTHENTIK_POSTGRESQL__NAME
      value: "authentik"
    - name: AUTHENTIK_POSTGRESQL__USER
      value: "authentik"
    - name: AUTHENTIK_REDIS__HOST
      value: "redis-master.default.svc.cluster.local"
    - name: AUTHENTIK_REDIS__PORT
      value: "6379"
    - name: AUTHENTIK_REDIS__PASSWORD
      valueFrom:
        secretKeyRef:
          name: urbalurba-secrets
          key: AUTHENTIK_REDIS__PASSWORD
    - name: AUTHENTIK_LOG_LEVEL
      value: "info"
    # Bootstrap admin user
    - name: AUTHENTIK_BOOTSTRAP_PASSWORD
      value: "SecretPassword1"
    - name: AUTHENTIK_BOOTSTRAP_EMAIL
      value: "admin@urbalurba.local"

  # Service configuration
  service:
    type: ClusterIP
    servicePortHttp: 80
    servicePortHttps: 443

  # Ingress disabled here - managed separately
  ingress:
    enabled: false

# Worker configuration  
worker:
  name: "worker"
  replicas: 1
  
  # Resource management
  resources:
    requests:
      memory: 512Mi
      cpu: 250m
    limits:
      memory: 1Gi
      cpu: 500m
  
  # Environment variables (same as server)
  env:
    - name: AUTHENTIK_SECRET_KEY
      valueFrom:
        secretKeyRef:
          name: urbalurba-secrets
          key: AUTHENTIK_SECRET_KEY
    - name: AUTHENTIK_POSTGRESQL__PASSWORD
      valueFrom:
        secretKeyRef:
          name: urbalurba-secrets
          key: AUTHENTIK_POSTGRESQL__PASSWORD
    - name: AUTHENTIK_POSTGRESQL__HOST
      value: "postgresql.default.svc.cluster.local"
    - name: AUTHENTIK_POSTGRESQL__PORT
      value: "5432"
    - name: AUTHENTIK_POSTGRESQL__NAME
      value: "authentik"
    - name: AUTHENTIK_POSTGRESQL__USER
      value: "authentik"
    - name: AUTHENTIK_REDIS__HOST
      value: "redis-master.default.svc.cluster.local"
    - name: AUTHENTIK_REDIS__PORT
      value: "6379"
    - name: AUTHENTIK_REDIS__PASSWORD
      valueFrom:
        secretKeyRef:
          name: urbalurba-secrets
          key: AUTHENTIK_REDIS__PASSWORD
    - name: AUTHENTIK_LOG_LEVEL
      value: "info"
    # Bootstrap admin user
    - name: AUTHENTIK_BOOTSTRAP_PASSWORD
      value: "SecretPassword1"
    - name: AUTHENTIK_BOOTSTRAP_EMAIL
      value: "admin@urbalurba.local"

# Global settings
global:
  image:
    repository: "ghcr.io/goauthentik/server"
    tag: ""  # Use chart default
    pullPolicy: "IfNotPresent"
  
  # Pod security context
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000

# Service account
serviceAccount:
  create: true
  annotations: {}
  name: "authentik"

# Monitoring (disabled for now)
prometheus:
  rules:
    enabled: false

# GeoIP (disabled for now)  
geoip:
  enabled: false