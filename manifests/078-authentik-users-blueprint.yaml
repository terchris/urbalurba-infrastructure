# yaml-language-server: $schema=https://goauthentik.io/blueprints/schema.json
version: 1
metadata:
  name: "Development Users and Groups Setup"
  labels:
    blueprints.goauthentik.io/instantiate: "true"
    blueprints.goauthentik.io/description: |
      Creates development users and groups for testing the Authentik setup.
      Includes developers, viewers, and admin groups with sample users.

context: {}

entries:
  # Create Groups
  - model: authentik_core.group
    state: present
    id: developers-group
    identifiers:
      name: developers
    attrs:
      name: developers
      is_superuser: false
      attributes:
        description: "Developers with full access to development applications"
        created_by: "blueprint"

  - model: authentik_core.group
    state: present 
    id: viewers-group
    identifiers:
      name: viewers
    attrs:
      name: viewers
      is_superuser: false
      attributes:
        description: "Read-only access to applications"
        created_by: "blueprint"

  - model: authentik_core.group
    state: present
    id: admins-group
    identifiers:
      name: admins
    attrs:
      name: admins
      is_superuser: true
      attributes:
        description: "Administrative access to all systems"
        created_by: "blueprint"

  # Create Developer Users
  - model: authentik_core.user
    state: present
    id: developer-user
    identifiers:
      username: developer
    attrs:
      username: developer
      email: developer@urbalurba.local
      name: Developer User
      is_active: true
      groups:
        - !KeyOf developers-group
      attributes:
        department: "Engineering"
        role: "Software Developer"
        created_by: "blueprint"
        
  - model: authentik_core.user
    state: present
    id: alice-user
    identifiers:
      username: alice
    attrs:
      username: alice
      email: alice@urbalurba.local
      name: Alice Johnson
      is_active: true
      groups:
        - !KeyOf developers-group
      attributes:
        department: "Engineering"
        role: "Senior Developer"
        created_by: "blueprint"

  # Create Viewer Users
  - model: authentik_core.user
    state: present
    id: viewer-user
    identifiers:
      username: viewer
    attrs:
      username: viewer
      email: viewer@urbalurba.local
      name: Viewer User
      is_active: true
      groups:
        - !KeyOf viewers-group
      attributes:
        department: "QA"
        role: "Quality Assurance"
        created_by: "blueprint"

  - model: authentik_core.user
    state: present
    id: bob-user
    identifiers:
      username: bob
    attrs:
      username: bob
      email: bob@urbalurba.local
      name: Bob Smith
      is_active: true
      groups:
        - !KeyOf viewers-group
      attributes:
        department: "Support"
        role: "Support Specialist"
        created_by: "blueprint"

  # Create Test User (multi-group)
  - model: authentik_core.user
    state: present
    id: testuser-user
    identifiers:
      username: testuser
    attrs:
      username: testuser
      email: test@urbalurba.local
      name: Test User
      is_active: true
      groups:
        - !KeyOf developers-group
        - !KeyOf viewers-group
      attributes:
        department: "Testing"
        role: "Test Engineer"
        created_by: "blueprint"

# Note: Passwords cannot be set directly in blueprints for security reasons
# They must be set separately via Django shell or admin interface
# Default password for all users: "Password123!" (set via automation script)
