# File: 020-nginx-root-ingress.yaml
#
# Description:
# Traefik IngressRoute for nginx catch-all/fallback routing
# Converted from standard Kubernetes Ingress to follow cluster ingress standards
#
# CATCHALL/FALLBACK CONFIGURATION:
# - Creates a low-priority fallback rule for all paths not defined elsewhere
# - All requests that don't match other IngressRoute rules will be sent to nginx
# - More specific routes (like protected services) will take precedence due to higher priority
# - Nginx serves as the default backend for any undefined paths
#
# PRIORITY SYSTEM:
# - Uses priority: 1 (lowest) to ensure other routes are matched first
# - Protected services should use higher priorities (10-100)
# - Specific path routes should use medium priorities (5-50)
#
# CLUSTER STANDARDS COMPLIANCE:
# - Uses traefik.io/v1alpha1 API version (required)
# - IngressRoute CRD instead of standard Kubernetes Ingress
# - No annotations - features configured via CRD spec
#
# Traffic Flow:
# User Request → Traefik → (no specific route match) → nginx service → nginx pods → PVC content
#
# Integration Notes:
# - Works with Tailscale funnel → Traefik → nginx routing pattern
# - Compatible with forward authentication on other routes
# - Does not interfere with protected IngressRoute configurations

apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: nginx-root-catch-all
  namespace: default
  labels:
    app: nginx
    component: catch-all-routing
spec:
  entryPoints:
    - web
  routes:
    - match: PathPrefix(`/`)
      kind: Rule
      priority: 1  # Lowest priority - ensures all other routes are checked first
      services:
        - name: nginx
          port: 80